-------
BASIC
-------
https://docs.groovy-lang.org/latest/html/api/groovy/sql/Sql.html
- List<GroovyRowResult>	rowsâ€‹(GString gstring)
- and many other options

https://docs.groovy-lang.org/latest/html/api/groovy/sql/GroovyRowResult.html
- GroovyRowResult
- All Implemented Interfaces: GroovyObject, Map

-------
FURTHER:
-------
https://stackoverflow.com/questions/6116198/groovy-sql-eachrow-and-rows-method

In all cases, eachRow returns nothing

void eachRow(String sql, Closure closure)
whereas rows returns a list of rows

List rows(String sql) 
So if you use eachRow, the closure passed in as the second parameter should handle each row, e.g.

sql.eachRow("select * from PERSON where lastname = 'murphy'") { row ->
    println "$row.firstname"
}


whereas if you use rows the rows are returned, and therefore should be handled by the caller, e.g.

rows("select * from PERSON where lastname = 'murphy'").each {row ->
    println "$row.firstname"        
}
