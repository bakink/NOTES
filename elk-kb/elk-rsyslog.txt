===================================
ELK TO PROCESS REMOTE RSYSLOG
===================================


SITES
Rsyslog server etc:
https://www.elastic.co/blog/how-to-centralize-logs-with-rsyslog-logstash-and-elasticsearch-on-ubuntu-14-04

Rsyslog server etc:
https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04

===================================
REQUIREMENT
===================================
Many machines send their rsyslog messages to a remote server (rsyslog-server)
In that remote server (rsyslog-server) process the incoming recoreds with Logstash and Elasticsearch

===================================
CONFIGURATION
===================================

------------------------------------------------
CONFIGURE MACHINES TO LOG TO RSYSLOG-SERVER
------------------------------------------------
<< For syslog push to rsyslog-server, see other doc in unix-kb or 
https://www.elastic.co/blog/how-to-centralize-logs-with-rsyslog-logstash-and-elasticsearch-on-ubuntu-14-04
>>

--------------------------------------------------------
SETUP ONCE YOU START RECEIVING LOGS ON RSYSLOG-SERVER
--------------------------------------------------------
Back on the rsyslog-server server, create a new configuration file to format the messages into JSON format before sending to Logstash:

- CONFIGURE JSON FORMAT FOR SENDING TO LOGSTASH
Create a file /etc/rsyslog.d/01-json-template.conf
Copy the following contents to the file exactly as shown:

template(name="json-template"
  type="list") {
    constant(value="{")
      constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
      constant(value="\",\"@version\":\"1")
      constant(value="\",\"message\":\"")     property(name="msg" format="json")
      constant(value="\",\"sysloghost\":\"")  property(name="hostname")
      constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
      constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
      constant(value="\",\"programname\":\"") property(name="programname")
      constant(value="\",\"procid\":\"")      property(name="procid")
    constant(value="\"}\n")
}

- CONFIGURE SENDING TO LOGSTASH

Create file /etc/rsyslog.d/60-output.conf
with the following lines:

# This line sends all lines to defined IP address at port 10514,
# using the "json-template" format template
*.*                         @@private_ip_logstash:10514;json-template

The *.* at the beginning means to process the remainder of the line for all log messages. The @ symbols means to use UDP (Use @@ to instead use TCP). The IP address or hostname after the @ is where to forward the messages. In our case, we are using the private IP address for rsyslog-server since the rsyslog centralized server and the Logstash server are installed on the same server. This must match the private IP address you configure Logstash to listen on in the next step.

- CONFIGURE LOGSTASH CONFIG FILE FOR THIS
NOTE: This does not include stdin etc which was done in basic tutorial.  Possibly that too can be added

NOTE: Use udp (tcp did not seem to work) --> define in the 'input' section in the config file
      Note: localhost did work or not - or should we use the IP address like 192.168.0.210 of the localhost?
            --> IP Addr seemed to work - will localhost work - TBD

File: /opt/logstash/logstash-6.4.2/config/logstash-rsyslog-server.conf
# This input block will listen on port 10514 for logs to come in.
# host should be an IP on the Logstash server.
# codec => "json" indicates that we expect the lines we're receiving to be in JSON format
# type => "rsyslog" is an optional identifier to help identify messaging streams in the pipeline.

input {
  udp {
    host => "192.168.0.210"
    port => 10514
    codec => "json"
    type => "rsyslog"
  }
}

# This is an empty filter block.  You can later add other filters here to further process
# your log lines

filter { }

# This output block will send all events of type "rsyslog" to Elasticsearch at the configured
# host and port into daily indices of the pattern, "rsyslog-YYYY.MM.DD"
output {
  if [type] == "rsyslog" {
    elasticsearch {
      hosts => [ "localhost:9200" ]
      index => "logstash-rsyslog-server"
    }
  }
}
