==============================
GO GET
==============================
GOPATH="/Users/username/go"
GOPRIVATE="" --> or, set the repolist as in "410 Gone Error" section
GOSUMDB="off" --> or, set the repolist as in "410 Gone Error" section
GO111MODULE="on" --> to avoid error "cannot use path@version syntax in GOPATH mode"

GOPRIVATE=*.corp.example.com

go get git.company.com/taps/platform-connectors@v2.2.1
go get -u github.com/spf13/cobra/cobra

==============================
ERROR - 410 Gone Error
==============================
https://medium.com/mabar/today-i-learned-fix-go-get-private-repository-return-error-reading-sum-golang-org-lookup-93058a058dd8

$ go get git.company.com/taps/platform-connectors
go: downloading git.company.com/taps/platform-connectors v2.2.1
verifying git.company.com/taps/platform-connectors@v2.2.1: git.company.com/taps/platform-connectors@vs.2.1: 
  reading https://sum.golang.org/lookup/git.company.com/taps/platform-connectors@v2.2.1: 410 Gone
  
When - Happens in Go 1.13 onwards - for non-public repos
Cause - Private repo's are not automatically accepted by go in these versions

- FIX1
Fix - Need to add GOPRIVATE environment variable with a list of such private repos --> This works
        OR, try GONOSUMDB="repo list" --> this too may work
        OR, try GONOSUMDB=off --> works
        
export GOPRIVATE="gitlab.com/idmabar,bitbucket.org/idmabar,github.com/idmabar"
- OR -
export GOPRIVATE=*.corp.example.com
- OR -
export GONOSUMDB="gitlab.com/idmabar,bitbucket.org/idmabar,github.com/idmabar"
- OR - 
export GOSUMDB=off


===========================================
ERROR - path@version syntax in GOPATH mode
===========================================
$ go get git.company.com/taps/platform-connectors@v2.2.1
go: cannot use path@version syntax in GOPATH mode

Fix: Do "export GO111MODULE=on"

===================================
ERROR - Removing Packages
===================================
Packages are downloaded by 'go get' into usually ~/go/pkg/mod/<repo site like github.com>/<org if exists>/<repo name>

To remove:
go clean -i git.company.com/<org>/<repo> (add -n for dry run)
go clean -i git.company.com/taps/platform-connectors  (add -n for dry run)

If that does not work:
rm -rf that repo folder 

PROBLEM:
1. go clean -i  git.company.com/taps/platform-connectors --> This does not do anything
2. $ rm -rf  platform-connectors@vs.2.1
rm: platform-connectors@v2.2.1/metrics/telegraf.go: Permission denied
...
...

CAUSE:
The repo folder and subfolders do not have write permission

$ ls -l
dr-x------  31 user  domain  992 Jun 24 12:21 platform-connectors@v2.2.1

FIX:
chmod -R +w <repo name>
chmod -R +w platform-connectors@v2.2.1

Then, either use go clean or rm -rf method to remove the package
