Sometimes Eclipse does not download the dependencies in the POM.XML file for internet/proxy/other reasons.
You can install the dependencies manually.

========
GUIDE
========
http://maven.apache.org/plugins/maven-install-plugin/examples/custom-pom-installation.html

Installing an artifact with a custom POM

The Apache Maven Install Plugin can include a pre-built custom POM with the artifact in the local repository. 
Just set the value of the pomFile parameter to the path of the custom POM.

mvn org.apache.maven.plugins:maven-install-plugin:2.5.2:install-file -Dfile=path-to-your-artifact-jar -DpomFile=path-to-pom
If the JAR was built by Apache Maven, it'll contain a pom.xml in a subfolder of the META-INF directory, 
which will be read by default. In that case, all you need to do is:

mvn org.apache.maven.plugins:maven-install-plugin:2.5.2:install-file -Dfile=<path-to-file>
Note: By using the fully qualified path of a goal, you're ensured to be using the preferred version 
of the maven-install-plugin. 
When using mvn install:install-file its version depends on its specification in the pom or the version of Apache Maven.

========
STEPS
========
Download .jar file
Download .pom file (if pom file link is absent, click link like 'view all' and it may be there)
--> .pom file may not be really needed
--> if POM file is absent, remove -Dpomfile option from the install command

Install it:
mvn install:install-file \
-Dfile=/Users/myusername/downloads/spring-boot-starter-jdbc-2.0.3.RELEASE.jar \
-DgroupId=org.springframework.boot -DartifactId=spring-boot-starter-jdbc \
-Dversion=2.0.3.RELEASE \
-Dpackaging=jar \
-Dpomfile=/Users/myusername/downloads/spring-boot-starter-jdbc-2.0.3.RELEASE.pom
