=====================================================================================================
KUBERNETS WITH CALICO - VBOX VMs, KUBEADM INIT (NO SEPARATE VMs, JUST DEFAULT METHOD OF INSTALLATION)
=====================================================================================================

ROUTABLE/NON-ROUTABLE IP RANGES
https://stackoverflow.com/questions/528538/non-routable-ip-address
For IPV4 the non-routable addresses ranges are from 10.1.1.1 to 10.255.255.254, 
from 172.16.1.1 to 172.31.255.254, and from 192.168.1.1 to 192.168.255.254. 
These IP addresses will not be recognized outside of a private network.

WHAT IPS TO USE

kc00:
VM IP (intnet) - 192.168.11.100
VM IP (bridged/host-only) - TBD TBD - 192.168.21.100
KUBERNETES POD IP CIDR  - 172.16.0.0/16  (https://serverfault.com/questions/931061/helm-i-o-timeout-kubernetes)
--> Don't use the same range as VM (like 192.168.0.0) - which seemed to cause problems in earlier calico trial

=================
MASTER
=================

- Create a working directory (optional)
# mkdir /root/kubeinstall
# cd /root/kubeinstall

------------------
INSTALL SOFTWARE
------------------
NOTE: This part is common to master and nodes

Install docker
Install kubelet, kubeadm, ....

---------------------------------
DISABLE SELINUX
---------------------------------
# setenforce 0

Edit the file /etc/sysconfig/selinux and set enforcing as disabled

---------------------------------
DISABLE SWAP
---------------------------------
# swapoff -a

Edit /etc/fstab and comment out line of swap
#/dev/mapper/ol-swap     swap                    swap    defaults        0 0

---------------------------------
ENABLE br_netfilter
---------------------------------
# modprobe br_netfilter
# echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

Also, put it in /etc/sysctl.conf as follows:
net.bridge.bridge-nf-call-iptables = 1

And, make it persistent:
# sysctl -p

---------------------------------
START SERVICES
---------------------------------
# systemctl enable docker
# systemctl enable kubelet
# service docker start

---------------------------------
KUBEADM PULL IMAGES
---------------------------------
# kubeadm config images pull 

---------------------------------
PULL SOME USEFUL IMAGES
---------------------------------
# docker pull nginx
# docker pull busybox
# docker pull busybox:1.28

==== BACKUP THE VM NOW

==================================
INITIALIZE CLUSTER - KUBEADM INIT
==================================
# kubeadm init --apiserver-advertise-address=192.168.11.100 --pod-network-cidr=172.16.0.0/16 --ignore-preflight-errors=all
Note: If 192.168.0.0/16 is already in use within your network you must select a different pod network CIDR, 
      replacing 192.168.0.0/16 in the above command as well as in any manifests applied below.
